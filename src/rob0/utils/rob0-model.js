// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
const Rob0 = {};

/**
 * @constructor
 */
Rob0.Vector2 = function () {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Rob0.Vector2}
 */
Rob0.Vector2.prototype.__init = function (i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
Rob0.Vector2.prototype.x = function () {
  return this.bb.readInt16(this.bb_pos);
};

/**
 * @returns {number}
 */
Rob0.Vector2.prototype.y = function () {
  return this.bb.readInt16(this.bb_pos + 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @returns {flatbuffers.Offset}
 */
Rob0.Vector2.createVector2 = function (builder, x, y) {
  builder.prep(2, 4);
  builder.writeInt16(y);
  builder.writeInt16(x);
  return builder.offset();
};

/**
 * @constructor
 */
Rob0.Image = function () {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Rob0.Image}
 */
Rob0.Image.prototype.__init = function (i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
Rob0.Image.prototype.offset = function () {
  return this.bb.readInt32(this.bb_pos);
};

/**
 * @returns {number}
 */
Rob0.Image.prototype.size = function () {
  return this.bb.readInt32(this.bb_pos + 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} offset
 * @param {number} size
 * @returns {flatbuffers.Offset}
 */
Rob0.Image.createImage = function (builder, offset, size) {
  builder.prep(4, 8);
  builder.writeInt32(size);
  builder.writeInt32(offset);
  return builder.offset();
};

/**
 * @constructor
 */
Rob0.Axis = function () {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Rob0.Axis}
 */
Rob0.Axis.prototype.__init = function (i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Rob0.Axis=} obj
 * @returns {Rob0.Axis}
 */
Rob0.Axis.getRootAsAxis = function (bb, obj) {
  return (obj || new Rob0.Axis()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Rob0.Axis.prototype.name = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Rob0.Axis.prototype.value = function () {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Rob0.Axis.startAxis = function (builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
Rob0.Axis.addName = function (builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} value
 */
Rob0.Axis.addValue = function (builder, value) {
  builder.addFieldFloat32(1, value, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Rob0.Axis.endAxis = function (builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Rob0.Frame = function () {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Rob0.Frame}
 */
Rob0.Frame.prototype.__init = function (i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Rob0.Frame=} obj
 * @returns {Rob0.Frame}
 */
Rob0.Frame.getRootAsFrame = function (bb, obj) {
  return (obj || new Rob0.Frame()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {Rob0.Image=} obj
 * @returns {Rob0.Image|null}
 */
Rob0.Frame.prototype.image = function (obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Rob0.Image()).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {number} index
 * @param {Rob0.Vector2=} obj
 * @returns {Rob0.Vector2}
 */
Rob0.Frame.prototype.touch = function (index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset
    ? (obj || new Rob0.Vector2()).__init(this.bb.__vector(this.bb_pos + offset) + index * 4, this.bb)
    : null;
};

/**
 * @returns {number}
 */
Rob0.Frame.prototype.touchLength = function () {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {Rob0.Vector2=} obj
 * @returns {Rob0.Vector2|null}
 */
Rob0.Frame.prototype.mouse = function (obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Rob0.Vector2()).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
Rob0.Frame.prototype.keyCodes = function (index) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt16(this.bb.__vector(this.bb_pos + offset) + index * 2) : 0;
};

/**
 * @returns {number}
 */
Rob0.Frame.prototype.keyCodesLength = function () {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int16Array}
 */
Rob0.Frame.prototype.keyCodesArray = function () {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset
    ? new Int16Array(
        this.bb.bytes().buffer,
        this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset),
        this.bb.__vector_len(this.bb_pos + offset)
      )
    : null;
};

/**
 * @param {number} index
 * @param {Rob0.Axis=} obj
 * @returns {Rob0.Axis}
 */
Rob0.Frame.prototype.axes = function (index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset
    ? (obj || new Rob0.Axis()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb)
    : null;
};

/**
 * @returns {number}
 */
Rob0.Frame.prototype.axesLength = function () {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Rob0.Frame.prototype.appFps = function () {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Rob0.Frame.prototype.data = function (optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Rob0.Frame.startFrame = function (builder) {
  builder.startObject(7);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} imageOffset
 */
Rob0.Frame.addImage = function (builder, imageOffset) {
  builder.addFieldStruct(0, imageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} touchOffset
 */
Rob0.Frame.addTouch = function (builder, touchOffset) {
  builder.addFieldOffset(1, touchOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Rob0.Frame.startTouchVector = function (builder, numElems) {
  builder.startVector(4, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} mouseOffset
 */
Rob0.Frame.addMouse = function (builder, mouseOffset) {
  builder.addFieldStruct(2, mouseOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyCodesOffset
 */
Rob0.Frame.addKeyCodes = function (builder, keyCodesOffset) {
  builder.addFieldOffset(3, keyCodesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
Rob0.Frame.createKeyCodesVector = function (builder, data) {
  builder.startVector(2, data.length, 2);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt16(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Rob0.Frame.startKeyCodesVector = function (builder, numElems) {
  builder.startVector(2, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} axesOffset
 */
Rob0.Frame.addAxes = function (builder, axesOffset) {
  builder.addFieldOffset(4, axesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Rob0.Frame.createAxesVector = function (builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Rob0.Frame.startAxesVector = function (builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} appFps
 */
Rob0.Frame.addAppFps = function (builder, appFps) {
  builder.addFieldInt16(5, appFps, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
Rob0.Frame.addData = function (builder, dataOffset) {
  builder.addFieldOffset(6, dataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Rob0.Frame.endFrame = function (builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Rob0.Capsule = function () {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Rob0.Capsule}
 */
Rob0.Capsule.prototype.__init = function (i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Rob0.Capsule=} obj
 * @returns {Rob0.Capsule}
 */
Rob0.Capsule.getRootAsCapsule = function (bb, obj) {
  return (obj || new Rob0.Capsule()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Rob0.Capsule.prototype.version = function () {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Rob0.Capsule.prototype.fps = function () {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {Rob0.Vector2=} obj
 * @returns {Rob0.Vector2|null}
 */
Rob0.Capsule.prototype.resolution = function (obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Rob0.Vector2()).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {number} index
 * @param {Rob0.Frame=} obj
 * @returns {Rob0.Frame}
 */
Rob0.Capsule.prototype.frames = function (index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset
    ? (obj || new Rob0.Frame()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb)
    : null;
};

/**
 * @returns {number}
 */
Rob0.Capsule.prototype.framesLength = function () {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Rob0.Capsule.startCapsule = function (builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} version
 */
Rob0.Capsule.addVersion = function (builder, version) {
  builder.addFieldInt16(0, version, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} fps
 */
Rob0.Capsule.addFps = function (builder, fps) {
  builder.addFieldInt32(1, fps, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} resolutionOffset
 */
Rob0.Capsule.addResolution = function (builder, resolutionOffset) {
  builder.addFieldStruct(2, resolutionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} framesOffset
 */
Rob0.Capsule.addFrames = function (builder, framesOffset) {
  builder.addFieldOffset(3, framesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Rob0.Capsule.createFramesVector = function (builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Rob0.Capsule.startFramesVector = function (builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Rob0.Capsule.endCapsule = function (builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Rob0.Capsule.finishCapsuleBuffer = function (builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
module.exports = {
  Rob0,
};
